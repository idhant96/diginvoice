
    def get_props(self):
        for obj in self.annotations:
            text = self.__spell_check(obj.description)
            if text:
                self.text_props[text] = obj.bounding_poly.vertices
        return self.text_props

    def get_roi(self, region_data, props):
        print('getting roi ')
        for text in props.keys():
            for element in region_data:
                if any(text == x for x in self.crop_hints):
                    # print(word)
                    self.y_min = props[text][0].y
                if text == element:
                    # stores the TL y coordinate and BR y coordinates
                    y = props[text][2].y
                    if y > self.y_max:
                        self.y_max = y
        # sys.exit('done')
        return self.image[self.y_min - 5:self.y_max + 20, 0:]

    def __get_contents(self):
        print('getting contents')
        for text in self.all_text:
            for item in text.split(' '):
                if item and item != ' ':
                    c_item = self.__spell_check(item)
                    if c_item:
                        print(c_item)
                        for text in self.text_props.keys():
                            if text == c_item:
                                vertice = self.text_props[text]
                                self.contents[c_item] = [(vertice[0].x, vertice[0].y),
                                                         (vertice[1].x, vertice[1].y),
                                                         (vertice[2].x, vertice[2].y),
                                                         (vertice[3].x, vertice[3].y)]
